---
import { getEntry } from 'astro:content'
import Markdown from '@components/misc/Markdown.astro'
import I18nKey from '../i18n/i18nKey'
import { i18n } from '../i18n/translation'
import MainGridLayout from '../layouts/MainGridLayout.astro'

// 定義你自己的連結
const myItems = [
  {
    title: '工具網站',
    imgurl:
      'http://localhost:4321/_image?href=%2F%40fs%2FD%3A%2Fqian%2Fqianowo%2Fweb%2Fblog%2Fsrc%2Fassets%2Fimages%2Fme.png%3ForigWidth%3D600%26origHeight%3D600%26origFormat%3Dpng&f=webp',
    desc: '一個小小的工具網站專案，用來練習前端，Vue建立',
    siteurl: 'https://tools.qian30.net',
    tags: ['專案'],
  },
]

// 如果友站連結內容來自內容檔案，你可以使用 getEntry；這裡示範直接定義友站連結
const friendsPost = await getEntry('spec', 'Links')
const friendItems = [
  {
    title: '高中學長的Blog',
    imgurl: 'https://blog.bob0623.net/_astro/avatar.BCKyvhet_ZvdnjX.webp',
    desc: '高中學長bob的Blog',
    siteurl: 'https://blog.bob0623.net/',
    tags: ['朋友!'],
  },
  {
    title: '呂老闆',
    imgurl: 'https://ricky.place/images/profile.jpg',
    desc: '呂大老闆',
    siteurl: 'https://ricky.place/',
    tags: ['朋友!'],
  },
]
---
<MainGridLayout title={i18n(I18nKey.links)} description={i18n(I18nKey.links)}>
    <!-- 上半部：我的連結 -->
    <section>
      <h2 class="text-xl font-bold mb-4 text-white">我的連結</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-8 my-4">
        {myItems.map((item) => (
          <a
            href={item.siteurl}
            target="_blank"
            rel="noopener noreferrer"
            class="flex flex-nowrap items-stretch h-28 gap-4 rounded-[var(--radius-large)] bg-[var(--card-bg,#333)] hover:shadow-lg hover:scale-105 transition transform duration-300"
          >
            <div class="w-28 h-28 flex-shrink-0 rounded-lg overflow-hidden bg-zinc-200 dark:bg-zinc-900">
              <img src={item.imgurl} alt="頭像" class="w-full h-full object-cover">
            </div>
            <div class="grow w-full flex flex-col justify-center">
              <div class="font-bold transition text-lg text-white mb-1">{item.title}</div>
              <div class="text-white text-sm font-medium">{item.desc}</div>
              <div class="flex items-center mt-1">
                {(item.tags && item.tags.length > 0)
                  ? item.tags.map((tag, i) => (
                      <>
                        {i > 0 && <span class="mx-1.5 text-white text-sm">/</span>}
                        <span class="transition text-white text-sm font-medium">{tag}</span>
                      </>
                    ))
                  : <span class="transition text-white text-sm font-medium">{i18n(I18nKey.noTags)}</span>}
              </div>
            </div>
            <div class="flex items-center pr-4">
              <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" class="transition text-white text-4xl iconify iconify--material-symbols" width="1em" height="1em" viewBox="0 0 24 24">
                <path fill="currentColor" d="M12.6 12L8.7 8.1q-.275-.275-.275-.7t.275-.7t.7-.275t.7.275l4.6 4.6q.15.15.213.325t.062.375t-.062.375t-.213.325l-4.6 4.6q-.275.275-.7.275t-.7-.275t-.275-.7t.275-.7z"></path>
              </svg>
            </div>
          </a>
        ))}
      </div>
    </section>
    
    <!-- 下半部：友站連結 -->
    <section>
      <h2 class="text-xl font-bold mb-4 text-white">友站連結</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-8 my-4">
        {friendItems.map((item) => (
          <a
            href={item.siteurl}
            target="_blank"
            rel="noopener noreferrer"
            class="flex flex-nowrap items-stretch h-28 gap-4 rounded-[var(--radius-large)] bg-[var(--card-bg,#333)] hover:shadow-lg hover:scale-105 transition transform duration-300"
          >
            <div class="w-28 h-28 flex-shrink-0 rounded-lg overflow-hidden bg-zinc-200 dark:bg-zinc-900">
              <img src={item.imgurl} alt="頭像" class="w-full h-full object-cover">
            </div>
            <div class="grow w-full flex flex-col justify-center">
              <div class="font-bold transition text-lg text-white mb-1">{item.title}</div>
              <div class="text-white text-sm font-medium">{item.desc}</div>
              <div class="flex items-center mt-1">
                {(item.tags && item.tags.length > 0)
                  ? item.tags.map((tag, i) => (
                      <>
                        {i > 0 && <span class="mx-1.5 text-white text-sm">/</span>}
                        <span class="transition text-white text-sm font-medium">{tag}</span>
                      </>
                    ))
                  : <span class="transition text-white text-sm font-medium">{i18n(I18nKey.noTags)}</span>}
              </div>
            </div>
            <div class="flex items-center pr-4">
              <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" class="transition text-white text-4xl iconify iconify--material-symbols" width="1em" height="1em" viewBox="0 0 24 24">
                <path fill="currentColor" d="M12.6 12L8.7 8.1q-.275-.275-.275-.7t.275-.7t.7-.275t.7.275l4.6 4.6q.15.15.213.325t.062.375t-.062.375t-.213.325l-4.6 4.6q-.275.275-.7.275t-.7-.275t-.275-.7t.275-.7z"></path>
              </svg>
            </div>
          </a>
        ))}
      </div>
    </section>
  </MainGridLayout>